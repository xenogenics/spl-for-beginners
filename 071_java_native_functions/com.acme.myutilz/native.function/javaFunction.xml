<?xml version="1.0" encoding="UTF-8"?><functionModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/function" xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/function functionModel.xsd">
  <!--DO NOT EDIT THIS FILE - it is machine generated-->
  <functionSet>
    <headerFileName>SPL_JNIFunctions_com_acme_myutilz.h</headerFileName>
    <cppNamespaceName>SPL::JNIFunctions::com::acme::myutilz::SPL_JNIFunctions</cppNamespaceName>
    <functions>
      <function>
        <!--Generated from MyJavaFunctions in impl/java/bin/MyJavaFunctions$StreamsModel.class at Sun Mar 29 20:47:13 EDT 2015-->
        <description>Adds two integers and then add the current result to the cumulative result stored in a state variable</description>
        <prototype><![CDATA[public int32 cumulativeAdd(int32, int32)]]></prototype>
        <javaFunctionName>public static int MyJavaFunctions.cumulativeAdd(int,int)</javaFunctionName>
      </function>
      <function>
        <!--Generated from MyJavaFunctions in impl/java/bin/MyJavaFunctions$StreamsModel.class at Sun Mar 29 20:47:13 EDT 2015-->
        <description>Adds two integers and then add the current result to the cumulative result stored in a state variable</description>
        <prototype><![CDATA[public uint32 cumulativeAdd(uint32, uint32)]]></prototype>
        <javaFunctionName>public static int MyJavaFunctions.cumulativeAdd(int,int)</javaFunctionName>
      </function>
      <function>
        <!--Generated from MyJavaFunctions in impl/java/bin/MyJavaFunctions$StreamsModel.class at Sun Mar 29 20:47:13 EDT 2015-->
        <description>Returns the length of an integer array</description>
        <prototype><![CDATA[public int32 intArrayLength(list<int32>)]]></prototype>
        <javaFunctionName>public static int MyJavaFunctions.intArrayLength(int[])</javaFunctionName>
      </function>
      <function>
        <!--Generated from MyJavaFunctions in impl/java/bin/MyJavaFunctions$StreamsModel.class at Sun Mar 29 20:47:13 EDT 2015-->
        <description>Returns the length of an integer array</description>
        <prototype><![CDATA[[N] public int32 intArrayLength(list<int32>[N])]]></prototype>
        <javaFunctionName>public static int MyJavaFunctions.intArrayLength(int[])</javaFunctionName>
      </function>
      <function>
        <!--Generated from MyJavaFunctions in impl/java/bin/MyJavaFunctions$StreamsModel.class at Sun Mar 29 20:47:13 EDT 2015-->
        <description>Returns the length of an integer array</description>
        <prototype><![CDATA[public uint32 intArrayLength(list<uint32>)]]></prototype>
        <javaFunctionName>public static int MyJavaFunctions.intArrayLength(int[])</javaFunctionName>
      </function>
      <function>
        <!--Generated from MyJavaFunctions in impl/java/bin/MyJavaFunctions$StreamsModel.class at Sun Mar 29 20:47:13 EDT 2015-->
        <description>Returns the length of an integer array</description>
        <prototype><![CDATA[[N] public uint32 intArrayLength(list<uint32>[N])]]></prototype>
        <javaFunctionName>public static int MyJavaFunctions.intArrayLength(int[])</javaFunctionName>
      </function>
      <function>
        <!--Generated from MyJavaFunctions in impl/java/bin/MyJavaFunctions$StreamsModel.class at Sun Mar 29 20:47:13 EDT 2015-->
        <description>Returns a nested list of double values</description>
        <prototype><![CDATA[public list<float64> getDoubleArray()]]></prototype>
        <javaFunctionName>public static double[] MyJavaFunctions.getDoubleArray()</javaFunctionName>
      </function>
    </functions>
    <dependencies>
      <library>
        <cmn:description>C++ interface to Java native functions.</cmn:description>
        <cmn:managedLibrary>
          <cmn:lib>streams-stdtk-javaop</cmn:lib>
          <cmn:lib>streams-stdtk-runtime</cmn:lib>
          <cmn:includePath>.</cmn:includePath>
        </cmn:managedLibrary>
      </library>
      <library>
        <cmn:description>Java JNI.</cmn:description>
        <cmn:managedLibrary>
          <cmn:lib>pthread</cmn:lib>
          <cmn:lib>dl</cmn:lib>
          <cmn:includePath>@JAVA_HOME@/include</cmn:includePath>
          <cmn:command>@STREAMS_TOOLKIT_DIR@/impl/bin/JavaOp_vmpath.sh</cmn:command>
        </cmn:managedLibrary>
      </library>
    </dependencies>
  </functionSet>
</functionModel>